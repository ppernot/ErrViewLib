% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotLZV.R
\name{plotLRCE}
\alias{plotLRCE}
\title{Plot local RCE to assess calibration and tightness}
\usage{
plotLRCE(
  X,
  uE,
  E,
  aux = NULL,
  logX = FALSE,
  nBin = NULL,
  equiPop = TRUE,
  popMin = 30,
  logBin = TRUE,
  intrv = NULL,
  plot = TRUE,
  slide = FALSE,
  nBoot = 5000,
  parallel = FALSE,
  xlab = "Conditioning variable",
  xlim = NULL,
  ylim = NULL,
  title = "",
  add = FALSE,
  col = 5,
  label = 0,
  gPars = ErrViewLib::setgPars()
)
}
\arguments{
\item{X}{(vector) abscissae of the Z values}

\item{aux}{(vector) auxilliary vector to resolve ties in X sorting}

\item{logX}{(logical) log-transform X}

\item{nBin}{(integer) number of intervals for local coverage stats}

\item{equiPop}{(logical) generate intervals  with equal bin counts
(default: `equiPop = TRUE`)}

\item{popMin}{(integer) minimal bin count in an interval}

\item{logBin}{(logical) if `equiPop = FALSE`, one can choose between
equal range intervals, or equal log-range intervals
(default `logBin = TRUE`)}

\item{intrv}{(object) intervals generated by `genIntervals` (default: `NULL`)}

\item{plot}{(logical) plot the results}

\item{slide}{(logical) use sliding window for subsetting (X,Z)}

\item{nBoot}{(integer) number of bootstrap replicas}

\item{parallel}{(logical) parallelized bootstrap (default: `FALSE`)}

\item{xlab}{(string) X axis label}

\item{xlim}{(vector) min and max values of X axis}

\item{ylim}{(vector) limits of the y axis}

\item{title}{(string) a title to display above the plot}

\item{add}{(logical) add to previous graph ?}

\item{col}{(integer) color index of curve to add}

\item{label}{(integer) index of letter for subplot tag}

\item{gPars}{(list) graphical parameters}

\item{Z}{(vector) set of z-score values to be tested}
}
\value{
Invisibly returns a list of LZV results. Mainly used
  for its plotting side effect.
}
\description{
Plot local RCE to assess calibration and tightness
}
\examples{
\donttest{
  uE  = sqrt(rchisq(1000, df = 4))  # Re-scale uncertainty
  E   = rnorm(uE, mean=0, sd=uE)    # Generate errors
  plotLRCE(uE, uE, E, ylim = c(-1, 1))
}
}
